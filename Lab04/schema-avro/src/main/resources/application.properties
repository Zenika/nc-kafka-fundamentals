# Application properties
## Topics
application.consumer.topic=vehicle-positions-avro
application.producer.topic=vehicle-positions-avro
## wait 100 ms
application.waiting-time=100ms
## Server port
server.port=8092

# Spring Kafka Properties
## Common part
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.properties.schema.registry.url=http://schema-registry:8081
## Producer part
spring.kafka.producer.client-id=vp-producer-avro
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.key-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
## Consumer part
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
# By default, each record is deserialized into an Avro GenericRecord, but in this tutorial the record should be deserialized using the applicationâ€™s code-generated PositionValue class.
# Therefore, configure the deserializer to use Avro SpecificRecord, i.e., SPECIFIC_AVRO_READER_CONFIG should be set to true.
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.client-id=vp-consumer-client-id-avro
spring.kafka.consumer.group-id=vp-consumer-avro
