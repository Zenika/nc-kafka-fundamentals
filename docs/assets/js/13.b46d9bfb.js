(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{374:function(e,r,a){"use strict";a.r(r);var t=a(44),l=Object(t.a)({},(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"lab05-kafka-stream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lab05-kafka-stream"}},[e._v("#")]),e._v(" Lab05 - Kafka Stream")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Checkout de la branche "),a("code",[e._v("step05")])])]),e._v(" "),a("li",[a("p",[e._v("Rappeler le principe de KStream (consumer et producer)")])]),e._v(" "),a("li",[a("p",[e._v("Présenter le projet spring")]),e._v(" "),a("ul",[a("li",[e._v("Paroucrir les properties")]),e._v(" "),a("li",[e._v("Expliquer le Stream Builder, la topology (affichage avec https://zz85.github.io/kafka-streams-viz/)")]),e._v(" "),a("li",[e._v("Expliquer les SerDes")])])]),e._v(" "),a("li",[a("p",[e._v("Compléter le code pour réalier un filtrage des données")])]),e._v(" "),a("li",[a("p",[e._v("Compléter le code pour réalier un mapping des données sur le type LightPositionValue")])]),e._v(" "),a("li",[a("p",[e._v("Parcourir les méthodes de Stream exposées par l'API")])]),e._v(" "),a("li",[a("p",[e._v("Builder et démarrer le container")])])]),e._v(" "),a("div",{staticClass:"language-console extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker build -t vp-kstream .\ndocker run --name vp-kstream --network=tz-kafka-network -d vp-kstream\n")])])])])}),[],!1,null,null,null);r.default=l.exports}}]);