(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{363:function(e,t,a){"use strict";a.r(t);var s=a(44),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"presentation-et-installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#presentation-et-installation"}},[e._v("#")]),e._v(" Présentation et Installation")]),e._v(" "),a("h2",{attrs:{id:"todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[e._v("#")]),e._v(" TODO")]),e._v(" "),a("ul",[a("li",[e._v("ajout de la manip pour windows")]),e._v(" "),a("li",[e._v("ajouter un slide sur la représentation de 3 broker avec 3 partitions")]),e._v(" "),a("li",[e._v("préciser c'est quoi un segement, file system, etfc.")]),e._v(" "),a("li",[e._v("montrer avec 2 shell procuder / consumer mais aussi en mode avec un shell -> mode asynchrone")])]),e._v(" "),a("h2",{attrs:{id:"pre-requis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pre-requis"}},[e._v("#")]),e._v(" Pré-requis")]),e._v(" "),a("h3",{attrs:{id:"docker-et-docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-et-docker-compose"}},[e._v("#")]),e._v(" Docker et Docker Compose")]),e._v(" "),a("ul",[a("li",[e._v("Docker version 19.03.15 ou supérieure (MacOSX, Linux ou Windows 10).")]),e._v(" "),a("li",[e._v("Docker Compose version 1.20.0 ou supérieure (MacOSX, Linux ou Windows 10).")])]),e._v(" "),a("p",[e._v("Vous pouvez vérifier la version de Docker et de Docker Compose que vous avez installée avec les commandes suivantes à\npartir de votre terminal:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("docker --version\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("docker-compose --version\n")])])]),a("blockquote",[a("p",[e._v("L'installation de Docker pour Mac ou Windows installera également Docker Compose. Si Docker est déjà installé, vous devez vérifier que Docker Compose version 1.20.0 ou supérieure est installé. Sinon, nous vous recommandons d'installer une version plus récente de Docker.")])]),e._v(" "),a("h3",{attrs:{id:"java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[e._v("#")]),e._v(" Java")]),e._v(" "),a("p",[e._v("Java 11 ou supérieure (MacOSX, Linux ou Windows 10).")]),e._v(" "),a("p",[e._v("Vous pouvez vérifier la version de Java que vous avez installée avec les commandes suivantes à partir de votre terminal:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("java --version\n")])])]),a("h3",{attrs:{id:"un-ide-digne-de-ce-nom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#un-ide-digne-de-ce-nom"}},[e._v("#")]),e._v(' Un IDE "digne de ce nom"')]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("VSCode"),a("OutboundLink")],1),e._v(" avec les plugins nécessaires pour executer et debugger une application Java / Spring Boot, pour plus d'informations: "),a("a",{attrs:{href:"https://code.visualstudio.com/docs/languages/java",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://code.visualstudio.com/docs/languages/java"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.jetbrains.com/fr-fr/idea/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intellij"),a("OutboundLink")],1),e._v(" correctement configuré pour executer et debugger une application Java / Spring Boot")])]),e._v(" "),a("h3",{attrs:{id:"hardware"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hardware"}},[e._v("#")]),e._v(" Hardware")]),e._v(" "),a("p",[e._v("Il est nécessaire de disposer de 2 GO de RAM pour démarrer l'ensemble de la stack.")]),e._v(" "),a("h2",{attrs:{id:"setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[e._v("#")]),e._v(" Setup")]),e._v(" "),a("ul",[a("li",[e._v("⚠️ Clone du repository GIT et checkout de la branche "),a("code",[e._v("step01")]),e._v(" ⚠️.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/Zenika/nc-kafka-fundamentals "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout step01\n")])])]),a("ul",[a("li",[e._v("Setup de la stack docker")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("docker-compose up -d\n")])])]),a("ul",[a("li",[e._v("Pour vérifier que l'ensemble fonctionne:")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("docker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" \nName               Command               State                    Ports                  \n-----------------------------------------------------------------------------------------\nakhq    docker-entrypoint.sh ./akhq      Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.0")]),e._v(".0.0:8080-"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8080")]),e._v("/tcp,:::8080-"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8080")]),e._v("/tcp\nkafka   /etc/confluent/docker/run        Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.0")]),e._v(".0.0:9092-"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("9092")]),e._v("/tcp,:::9092-"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("9092")]),e._v("/tcp\ntools   "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v(" -c "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" Waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".   Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("9092")]),e._v("/tcp                                \nzk      /etc/confluent/docker/run        Up      "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2181")]),e._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2888")]),e._v("/tcp, "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3888")]),e._v("/tcp  \n")])])]),a("ul",[a("li",[a("p",[e._v("Exposer les conteneurs au sein de votre OS en ajoutant dans votre fichier "),a("code",[e._v("/etc/hosts")])]),e._v(" "),a("ul",[a("li",[e._v("OSX/Linux : "),a("code",[e._v("/etc/hosts")]),e._v(" (ouvrir en tant qu'administrateur)")]),e._v(" "),a("li",[e._v("Windows : "),a("code",[e._v("C:\\Windows\\System32\\drivers\\etc\\hosts")])])])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("127.0.0.1 akhq\n127.0.0.1 kafka\n127.0.0.1 schema-registry \n127.0.0.1 connect\n")])])]),a("ul",[a("li",[e._v("Grace à cette exposition vous pouvez accéder aux différents conteneurs en utilisant les noms d'hôtes des conteneurs,\nexemple:\n"),a("ul",[a("li",[a("code",[e._v("http://akhq:8080/")]),e._v(" pour akhq ou précédemment vous y avez accéder avec l'url "),a("code",[e._v("http://localhost:8080/")])]),e._v(" "),a("li",[a("code",[e._v("kafka:9092")]),e._v(" pour accéder à votre broker kafka")]),e._v(" "),a("li",[e._v("etc.")])])])]),e._v(" "),a("h2",{attrs:{id:"le-petit-mot-de-vos-speakers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#le-petit-mot-de-vos-speakers"}},[e._v("#")]),e._v(' Le petit mot de vos "speakers"')]),e._v(" "),a("p",[e._v("Adrien Wattez")]),e._v(" "),a("p",[e._v("Consultant & Formateur @ Zenika Rennes")]),e._v(" "),a("img",{attrs:{src:"adrien.png",alt:"adrien",width:"200"}}),e._v(" "),a("div",{staticStyle:{"text-align":"right"}},[e._v("\nMickael Boixiere\n"),a("p",[e._v("Consultant & Formateur @ Zenika Rennes")]),e._v(" "),a("img",{attrs:{src:"mickael.jpg",alt:"mickael",width:"200"}})]),e._v(" "),a("h2",{attrs:{id:"un-peu-d-histoire-et-de-contexte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#un-peu-d-histoire-et-de-contexte"}},[e._v("#")]),e._v(" Un peu d'histoire et de contexte")]),e._v(" "),a("ul",[a("li",[e._v("2009 : début du projet (opensourcé par Linkedin)")]),e._v(" "),a("li",[e._v("2011 : première version publique")]),e._v(" "),a("li",[e._v("2012 : incubation par Apache")]),e._v(" "),a("li",[e._v("2014 : création de Confluent")])]),e._v(" "),a("p",[e._v("Kafka est gratuit et open-source. Confluent vend des solutions d’hébergement (cloud et on-premise), des outils, du\nsupport et des formations.")]),e._v(" "),a("p",[a("img",{attrs:{src:"confluent.png",alt:"Confluent"}})]),e._v(" "),a("p",[e._v("C'est pourquoi nous utilisons des images "),a("code",[e._v("confluentinc")]),e._v(" durant ce workshop : "),a("code",[e._v("confluentinc/cp-zookeeper")]),e._v(" et "),a("code",[e._v("confluentinc/cp-kafka")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"sommaire"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sommaire"}},[e._v("#")]),e._v(" Sommaire")]),e._v(" "),a("p",[a("img",{attrs:{src:"sommaire.png",alt:"Sommaire"}})])])}),[],!1,null,null,null);t.default=r.exports}}]);